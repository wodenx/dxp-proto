name: End to End Regression Tests

on:
  workflow_dispatch:
  schedule:
    - cron: "0 6 * * 1-5"

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout (including submodules)
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17
          cache: 'gradle'
      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.19.1
          cache: 'npm'
      - name: Install dependencies
        run: npm install

      - name: Generate changes date
        id: date
        run: echo "date=$(date +%Y-%m-%d -d 'yesterday')" >> $GITHUB_OUTPUT
      - name: Get changes
        id: changed-files
        uses: tj-actions/changed-files@v35
        with:
          files_ignore: sites/__dxp__/src/data/
          since: ${{ steps.date.outputs.date }}
      - name: Run regression tests
        if: steps.changed-files.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch'
        env:
          TEST_CONTENTFUL_TOKEN: ${{ secrets.TEST_CONTENTFUL_TOKEN }}
          TEST_GITHUB_TOKEN: ${{ secrets.TEST_GITHUB_TOKEN }}
          SAUCELABS_USERNAME: ${{ secrets.SAUCELABS_USERNAME }}
          SAUCELABS_PASSWORD: ${{ secrets.SAUCELABS_PASSWORD }}
        run: |
          cd tests/e2e
          ./gradlew runStories -Pvividus.variables.contentful-token=${TEST_CONTENTFUL_TOKEN} \
                               -Pvividus.variables.github-token=${TEST_GITHUB_TOKEN} \
                               -Pvividus.selenium.grid.username=${SAUCELABS_USERNAME} \
                               -Pvividus.selenium.grid.password=${SAUCELABS_PASSWORD} \
                               -Pvividus.configuration-set.active=api
      - name: Publish report
        if: steps.changed-files.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch'
        uses: actions/upload-artifact@v3
        with:
          name: Tests report for ${{ matrix.suite }} run
          path: tests/e2e/output/reports/allure
      - name: Deploy report to Vercel
        if: steps.changed-files-excluded.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch'
        env:
          REPORT_DEPLOY_KEY: ${{ secrets.REPORT_DEPLOY_KEY }}
          VERCEL_ORG_ID: ${{ vars.REPORT_VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ vars.REPORT_VERCEL_PROJECT_ID }}
        run: |
          cd tests/e2e
          mv output/reports/allure .
          cd allure

          npm install -g vercel
          vercel deploy -t $REPORT_DEPLOY_KEY -S jnj-demo-account --prod

      - name: Get installed Playwright version
        id: playwright-version
        run: echo "PLAYWRIGHT_VERSION=$(node -e "console.log(require('./package-lock.json').dependencies['@playwright/test'].version)")" >> $GITHUB_ENV
      - name: Cache playwright binaries
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}
      - name: Install playwrght
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps
      - name: Run configuration tests
        env:
          CONTENTFUL_ACCESS_TOKEN: ${{ secrets.TEST_CONTENTFUL_TOKEN }}
          CONTENTFUL_SPACE_ID: ${{ secrets.CONTENTFUL_SPACE_ID }}
          CONTENTFUL_ENVIRONMENT_ID: master
        run: |
          npx playwright install --with-deps
          npx playwright test
      - name: Upload Playwright report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
